q• Vous devez recoder la fonction printf de la librairie C.
• Votre fonction s’appelera ft_printf et sera prototypée de la même façon que
printf.
• Vous ne ferez pas la gestion de buffer présente dans la fonction printf de la librairie
C.
• Vous devez gérer les conversions suivantes : sSpdDioOuUxXcC
• Vous devez gérer le %%
• Vous devez gérer les flags #0-+ et espace
• Vous devez gérer la taille minimum du champ
• Vous devez gérer la précision
• Vous devez gérer les flags hh h l ll j z





	void
    va_start(va_list ap, last);

    type
    va_arg(va_list ap, type);

    void
    va_copy(va_list dest, va_list src);

    void
    va_end(va_list ap);


	AFTER a '%' the printf function parses until it has found a char that does not satisfy any of the flags/width/precision/length characteristics.

	"sSpdDioOuxXcC"

	d/i : signed decimal
	D   : long decimal
	o   : unsigned octal
	O   : unsigned long octal
	u   : unsigned decimal
	U   : unsigned long
	x   : unsigned hexadecimal
	s   : char string
	S   : wide char string (ls)
	c   : int printed as unsigned char
	C   : wide char (lc)
	p   : pointer (#x | #lx)

		d / i				o u x					c			s
	hh	signed char			unsigned char			x			x
	h	short				unsigned short			x			x
	ll	long long			unsigned long long		x			x
	l	long				unsigned long			wint_t		wchar_t*
	j	intmax_t			uintmax_t				x			x
	z	signed size_t		size_t					x			x
